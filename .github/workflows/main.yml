
name: Deploy to Azure

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and test backend
      run: |
        cd backend
        ./mvnw clean install

    - name: Build and test frontend
      run: |
        cd frontend
        npm install
        npm test

    - name: Build and push backend Docker image
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/backend:latest -f backend/Dockerfile .
        echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/backend:latest

    - name: Build and push frontend Docker image
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest -f frontend/Dockerfile .
        echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Initialize Terraform
      run: terraform init

    - name: Apply Terraform configuration (Step 1)
      run: terraform apply -auto-approve -var-file=terraform.tfvars -target=azurerm_key_vault.key_vault -target=azurerm_linux_web_app.backend_app -target=azurerm_linux_web_app.frontend_app

    - name: Apply Terraform configuration (Step 2)
      run: terraform apply -auto-approve -var-file=terraform.tfvars -target=azurerm_key_vault_secret.sql_admin_password

    - name: Apply Terraform configuration (Step 3)
      run: terraform apply -auto-approve -var-file=terraform.tfvars

    - name: Set up monitoring and auditing
      run: |
        # Add commands to set up monitoring and auditing for the infrastructure

    - name: Clean up infrastructure
      if: always()
      run: terraform destroy -auto-approve -var-file=terraform.tfvars
